/* Div20x = Divide-by-20*/
module Div20x(tc, count, reset, clock, cet, cep);
        
        parameter size = 5;
        parameter length = 20;        


        //le uscite e gli ingressi rappresentano le connessioni al modulo
        input reset;        
        input clock;        
        input cet;        //Clock Enable And
        input cep;        //Cloct Enable Only
        output tc;
        output [size-1:0]count;


        reg [size-1:0]count;


        wire tc;


always@(posedge clock or posedge reset)
        if(reset)
                begin        //quando nel corpo c'e' un solo comando sono superflui
                        count <= 5'b0;
                end
        else if(cet && cep)
                begin
                        if(count == length-1)
                                count <= 5'b0;
                        else
                                count <= count + 5'b1;
                end
assign tc = (cet && (count == length-1));


initial
        begin
                $monitor("%t %d ", $time, count);
                $dumpfile("Prova.vcd");
                $dumpvars;
                #30
                $finish;
        end


endmodule


//Sintassi
#! /usr/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x82c7a18 .scope module, "Div20x" "Div20x" 2 2;
 .timescale 0 0;
P_0x82c7a9c .param/l "length" 2 5, +C4<010100>;
P_0x82c7ab0 .param/l "size" 2 4, +C4<0101>;
L_0x82f9c88 .functor AND 1, C4<z>, L_0x82f9ba8, C4<1>, C4<1>;
v0x82c7e88_0 .net *"_s0", 7 0, L_0x82f9aa8; 1 drivers
v0x82f96c8_0 .net *"_s3", 2 0, C4<000>; 1 drivers
v0x82f9728_0 .net *"_s4", 7 0, C4<00010011>; 1 drivers
v0x82f9788_0 .net *"_s6", 0 0, L_0x82f9ba8; 1 drivers
v0x82f97f0_0 .net "cep", 0 0, C4<z>; 0 drivers
v0x82f9850_0 .net "cet", 0 0, C4<z>; 0 drivers
v0x82f98d0_0 .net "clock", 0 0, C4<z>; 0 drivers
v0x82f9930_0 .var "count", 4 0;
v0x82f99b8_0 .net "reset", 0 0, C4<z>; 0 drivers
v0x82f9a18_0 .net "tc", 0 0, L_0x82f9c88; 1 drivers
E_0x82c80f8 .event posedge, v0x82f99b8_0, v0x82f98d0_0;
L_0x82f9aa8 .concat [ 5 3 0 0], v0x82f9930_0, C4<000>;
L_0x82f9ba8 .cmp/eq 8, L_0x82f9aa8, C4<00010011>;
    .scope S_0x82c7a18;
T_0 ;
    %wait E_0x82c80f8;
    %load/v 8, v0x82f99b8_0, 1;
    %jmp/0xz  T_0.0, 8;
    %ix/load 0, 5, 0;
    %assign/v0 v0x82f9930_0, 0, 0;
    %jmp T_0.1;
T_0.0 ;
    %load/v 8, v0x82f9850_0, 1;
    %load/v 9, v0x82f97f0_0, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.2, 8;
    %load/v 8, v0x82f9930_0, 5;
    %mov 13, 0, 3;
    %cmpi/u 8, 19, 8;
    %jmp/0xz  T_0.4, 4;
    %ix/load 0, 5, 0;
    %assign/v0 v0x82f9930_0, 0, 0;
    %jmp T_0.5;
T_0.4 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x82f9930_0, 5;
    %ix/load 0, 5, 0;
    %assign/v0 v0x82f9930_0, 0, 8;
T_0.5 ;
T_0.2 ;
T_0.1 ;
    %jmp T_0;
    .thread T_0;
    .scope S_0x82c7a18;
T_1 ;
    %vpi_call 2 35 "$monitor", "%t %d ", $time, v0x82f9930_0;
    %vpi_call 2 36 "$dumpfile", "Prova.vcd";
    %vpi_call 2 37 "$dumpvars";
    %delay 30, 0;
    %vpi_call 2 39 "$finish";
    %end;
    .thread T_1;
# The file index is used to find the file name in the following table.
:file_names 3;
    "N/A";
    "<interactive>";
    "Prova.vl";